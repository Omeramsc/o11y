apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: on-pull-request
  annotations:
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    - name: git-url
      value: "{{repo_url}}"
    - name: revision
      value: "{{revision}}"
    - name: target-branch
      value: "{{target_branch}}"
  pipelineSpec:
    params:
      - name: git-url
        type: string
      - name: revision
        type: string
      - name: target-branch
        type: string
    workspaces:
      - name: workspace
    tasks:
      - name: clone-repository
        params:
          - name: url
            value: $(params.git-url)
          - name: revision
            value: $(params.revision)
          - name: depth
            value: 20
        workspaces:
          - name: output
            workspace: workspace
        taskRef:
          bundle: quay.io/redhat-appstudio/appstudio-tasks:510fa6e99f1fa1f816c96354bbaf1ad155c6d9c3-1
          name: git-clone
      - name: prepare-for-prometheus-tests
        workspaces:
          - name: workspace
            workspace: workspace
        runAfter:
          - clone-repository
        taskSpec:
          workspaces:
            - name: workspace
          steps:
            - name: run-tests
              image: registry.access.redhat.com/ubi8/ubi:latest
              workingDir: $(workspaces.workspace.path)
              script: yum install -y make && make prepare
      - name: run-prometheus-rules-unit-tests
        workspaces:
          - name: workspace
            workspace: workspace
        runAfter:
          - prepare-for-prometheus-tests
        taskSpec:
          workspaces:
            - name: workspace
          steps:
            - name: run-tests
              image: registry.access.redhat.com/ubi8/ubi:latest
              workingDir: $(workspaces.workspace.path)
              script: yum install -y make && make test_rules
      - name: run-prometheus-rules-lint-tests
        workspaces:
          - name: workspace
            workspace: workspace
        runAfter:
          - prepare-for-prometheus-tests
        taskSpec:
          workspaces:
            - name: workspace
          steps:
            - name: run-tests
              image: registry.access.redhat.com/ubi8/ubi:latest
              workingDir: $(workspaces.workspace.path)
              script: yum install -y make && make lint
      - name: lint-prometheus-rules
        workspaces:
          - name: workspace
            workspace: workspace
        runAfter:
          - prepare-for-prometheus-tests
        taskSpec:
          workspaces:
            - name: workspace
          steps:
            - name: lint-rules
              image: registry.access.redhat.com/ubi8/ubi:latest
              workingDir: $(workspaces.workspace.path)
              script: yum install -y make && make pint
      - name: run-gitlint
        params:
          - name: target-branch
            value: $(params.target-branch)
        workspaces:
          - name: workspace
            workspace: workspace
        runAfter:
          - clone-repository
        taskSpec:
          params:
            - name: target-branch
          workspaces:
            - name: workspace
          steps:
            - name: run-gitlint
              image: registry.access.redhat.com/ubi9/python-39:latest
              workingDir: $(workspaces.workspace.path)
              script: |
                #!/bin/bash -ex

                python -m pip install gitlint
                git fetch origin "$(params.target-branch)"
                gitlint --fail-without-commits --commits "origin/$(params.target-branch)..HEAD"
      - name: yaml-lint
        workspaces:
          - name: workspace
            workspace: workspace
        runAfter:
          - clone-repository
        taskSpec:
          workspaces:
            - name: workspace
          steps:
            - name: yaml-lint
              image: registry.access.redhat.com/ubi9/python-39:latest
              workingDir: $(workspaces.workspace.path)
              script: |
                #!/bin/bash -ex

                python -m pip install yamllint
                yamllint .
  workspaces:
    - name: workspace
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
